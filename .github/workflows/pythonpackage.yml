name: Python package

on:
  push:
  pull_request:
  schedule:
    - cron:  '0 0 * * *'

jobs:

  codestyle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - run: python -m pip install black flake8
    - name: run black
      run: black --check ./
    - name: run flake8
      run: flake8 --max-line-length=120 ./

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python setup.py install
        sudo apt install -y unrar p7zip-full
      if: matrix.os == 'ubuntu-latest'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python setup.py install
        choco install unrar
        choco install 7zip.install
      if: matrix.os == 'windows-latest'
    - name: Test
      run: |
        python -m unittest discover -b

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python setup.py install
        pip install coverage
        sudo apt install -y unrar p7zip-full
    - name: Generate coverage report
      run: |
        coverage run -m unittest discover
        coverage xml
    - name: Upload coverage to Codecov  
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: unittests
